class Solution: 
    def heapify(self,arr, n, i):
            small = i
            l = 2*i + 1
            r = 2*i + 2
            
            if (l < n) and arr[l] < arr[small]:
                small = l
                
            if (r < n) and arr[r] < arr[small]:
                small = r
                
            if small != i:
                arr[small], arr[i] = arr[i], arr[small]
                
                self.heapify(arr, n, small)
            

    def kthSmallest(self, arr,k):
        n = len(arr)
        for i in range(n//2-1, -1, -1):
            self.heapify(arr, n, i)
            
        
        for i in range(n-1, n-k, -1):
            arr[i], arr[0] = arr[0], arr[i]
            
            self.heapify(arr, i, 0)
                
        return arr[0]